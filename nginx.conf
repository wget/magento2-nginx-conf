server {
    listen 80;
    listen [::]:80;
    server_name .staging21.example.lan;
    return 301 https://www.staging21.example.lan$request_uri;
    include nginx_location_letsencrypt.conf;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name staging21.example.lan;
    return 301 https://www.staging21.example.lan$request_uri;

    ssl_certificate /etc/nginx/ssl/example.crt;
    ssl_certificate_key /etc/nginx/ssl/example.key;
    ssl_trusted_certificate /etc/nginx/ssl/example.crt;

    include nginx_ssl_default.conf;
    include nginx_location_letsencrypt.conf;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.staging21.example.lan;

    set $MAGE_ROOT /home/wget/IT/Dev/example_staging21/pub;

    root $MAGE_ROOT;
    ssl_certificate /etc/nginx/ssl/example.crt;
    ssl_certificate_key /etc/nginx/ssl/example.key;
    ssl_trusted_certificate /etc/nginx/ssl/example.crt;

    #auth_basic "Restricted";
    #auth_basic_user_file /etc/nginx/sites-available/staging21_htpasswd;

    include nginx_ssl_default.conf;
    #include nginx_location_default.conf;
    include nginx_location_letsencrypt.conf;

    error_log /var/log/nginx/example.log info;

    index index.php;
    autoindex off;
    charset UTF-8;
    error_page 404 403 = /errors/404.php;

    #error_page 500 502 503 504 /50x.html;

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        image/svg+xml;
    gzip_vary on;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location /pub {
        location ~ ^/pub/media/(downloadable|customer|import|theme_customization/.*\.xml) {
            deny all;
        }
        alias $MAGE_ROOT;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /static/ {
        # Remove signature of the static files that is used to overcome the browser cache
        location ~ ^/static/version {
            rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
        }

        # catch the secure require-config.js
        location ~* secure/requirejs-config\.js {
            rewrite ^/static/(.*)/secure/(.*)$ /static/$1/$2 last;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;

            if (!-f $request_filename) {
                rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
            }
        }

        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;

            if (!-f $request_filename) {
                rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
            }
        }

        if (!-f $request_filename) {
            rewrite ^/static/?(.*)$ /static.php?resource=$1 last;
        }

        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/ {
        try_files $uri $uri/ /get.php$is_args$args;

        location ~ ^/media/theme_customization/.*\.xml {
            deny all;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;
            try_files $uri $uri/ /get.php$is_args$args;
        }

        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;
            try_files $uri $uri/ /get.php$is_args$args;
        }

        add_header X-Frame-Options "SAMEORIGIN";
    }


    location /media/customer/ {
        deny all;
    }

    location /media/downloadable/ {
        deny all;
    }

    location /media/import/ {
        deny all;
    }

    location ~ cron\.php {
        deny all;
    }

    location ~ (index|get|static|report|404|503)\.php$ {
        try_files $uri =404;
        #fastcgi_pass unix:/run/php70-fpm/php-fpm.sock;
        fastcgi_pass unix:/run/php70-fpm/php-fpm-wget-pool.sock;
        fastcgi_buffers 1024 4k;

        fastcgi_param PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_param PHP_VALUE "memory_limit=768M \n max_execution_time=18000";
        fastcgi_read_timeout 600s;
        fastcgi_connect_timeout 600s;

        #fastcgi_intercept_errors on;

        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (\.php$|/\.) {
        deny all;
    }

    # Needed for Magento 1.x to 2.x migration tool made by UberTheme
    # src.: https://www.ubertheme.com/magento-extensions-2-x/magento-2-data-migration-pro/
    #include /home/5VKhMjSYopGMWrsHKgl9lxSRUZkah2xU/website/staging21/pub/ub-tool/nginx.conf;

    # For the sitemaps
    location /sitemaps/ {
        root $MAGE_ROOT/../sitemaps/;
    }

    # For the custom maintenance page
    set $maintenance off;

    if (-f $MAGE_ROOT/../maintenance.enable) {
        set $maintenance on;
    }

    if ($remote_addr ~ (82.212.173.88|127.0.0.1)) {
        set $maintenance off;
    }

    if ($maintenance = on) {
        return 503;
    }

    error_page 503 @maintenance;

    location @maintenance {
        root $MAGE_ROOT/../maintenance_page/;
        if ($uri !~ ^/maintenance_assets/) {
            rewrite ^(.*)$ /maintenance.html break;
        }
    }

    location /maintenance_assets {
        alias $MAGE_ROOT/../maintenance_page/maintenance_assets/;
    }
}

